{"version":3,"file":"static/js/825.66a6375f.chunk.js","mappings":"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","sources":["assets/sources/Project4.tsx","components/useObserver.tsx","pages/DetailPage/components/Simulation.tsx"],"sourcesContent":["import WhatIDid from \"pages/DetailPage/components/WhatIDid\";\r\nimport UsedTech from \"pages/DetailPage/components/UsedTech\";\r\nimport { ContentType } from \"types/common\";\r\nimport { ProjectIntro } from \"pages/DetailPage/components/ProjectIntro\";\r\nimport Simulation from \"pages/DetailPage/components/Simulation\";\r\n\r\nconst Project = (props: { info: ContentType }) => {\r\n  const info = props.info;\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center\">\r\n      <ProjectIntro info={info.detail} />\r\n      <section className=\"w-full flex flex-col items-center border-y border-[#d2d2d2]\">\r\n        <img\r\n          src=\"/images/portfolio.webp\"\r\n          alt=\"\"\r\n          width=\"1300\"\r\n          height=\"1000\"\r\n          className=\"w-[1000px] h-auto\"\r\n        />\r\n      </section>\r\n      <section className=\"w-full\">\r\n        {info.detail.simImageSrc && (\r\n          <Simulation data={info.detail.simImageSrc} />\r\n        )}\r\n      </section>\r\n      <section className=\"w-full bg-[#fbfbfb]\">\r\n        <UsedTech tech={info.detail.tech} />\r\n        <WhatIDid info={info.detail.whatIDid} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst useObserver = (threshold: number) => {\r\n  const target = useRef<HTMLDivElement>(null);\r\n  const [isIntersecting, setIsIntersecting] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (target.current) {\r\n      const observer = new IntersectionObserver(\r\n        (entries: IntersectionObserverEntry[]) => {\r\n          entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (entry.isIntersecting) setIsIntersecting(true);\r\n            else setIsIntersecting(false);\r\n          });\r\n        },\r\n        {\r\n          threshold: threshold,\r\n        }\r\n      );\r\n      observer.observe(target.current as Element);\r\n      return () => {\r\n        if (observer) {\r\n          console.log(\"observer 종료\");\r\n          observer && observer.disconnect(); // unmounted 시 IntersectionObserver 종료\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return { target, isIntersecting };\r\n};\r\n\r\nexport default useObserver;\r\n","import styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useObserver from \"components/useObserver\";\r\n\r\nlet simTimer: NodeJS.Timeout;\r\n\r\nconst Simulation = (props: { data: string[][] }) => {\r\n  const imageSrcs: string[][] = props.data;\r\n  const [card, setCard] = useState<number>(-1); // -1: standBy, 0~N: 호버링 인덱스 번호\r\n  const [isClicked, setIsClicked] = useState<boolean>(false);\r\n  const { target: targetRef, isIntersecting } = useObserver(0.7); // 시뮬레이션 컴포넌트가 뷰포트에 교차되는 경우 작동\r\n\r\n  useEffect(() => {\r\n    loadAllImages(imageSrcs);\r\n    return () => simTimer && clearTimeout(simTimer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) setCurrentCard(0);\r\n    else setCurrentCard(-1);\r\n  }, [isIntersecting]);\r\n\r\n  const loadAllImages = (imageList: string[][]) => {\r\n    imageList.forEach((src: string[]) => {\r\n      const loadGif = new Image();\r\n      loadGif.src = src[1];\r\n    });\r\n  };\r\n\r\n  const setCurrentCard = (index: number) => {\r\n    const target = document.querySelector(`#sim-${index}`) as HTMLImageElement;\r\n    if (target) {\r\n      handleOnBgClick();\r\n      changeImgPath(target, target.dataset.src);\r\n      setCard(index);\r\n    } else setCard(index);\r\n  };\r\n\r\n  const unSetCardAll = () => {\r\n    const targets: NodeListOf<HTMLImageElement> =\r\n      document.querySelectorAll(`.sim`);\r\n    targets.forEach((target: HTMLImageElement) => {\r\n      changeImgPath(target, target.dataset.thumbnail);\r\n    });\r\n    setCard(-1);\r\n  };\r\n\r\n  const changeImgPath = (\r\n    target: HTMLImageElement,\r\n    newSrc: string | undefined\r\n  ) => {\r\n    if (newSrc) target.src = newSrc;\r\n  };\r\n\r\n  const getElementOffset = (target: HTMLElement) => {\r\n    const top = target.offsetTop;\r\n    const left = target.offsetLeft;\r\n    const height = target.offsetHeight;\r\n    const width = target.offsetWidth;\r\n    return { top, left, height, width };\r\n  };\r\n\r\n  const handleOnMouseOver = (index: number) => {\r\n    if (isClicked) return;\r\n    setCurrentCard(index);\r\n  };\r\n\r\n  const handleOnMouseLeave = (\r\n    e: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n  ) => {\r\n    if (isClicked) return;\r\n    unSetCardAll();\r\n  };\r\n\r\n  const handleOnBgClick = () => {\r\n    setIsClicked(false);\r\n    const bg = document.querySelector(\"#blurbg-sim\") as HTMLDivElement;\r\n    bg.style.opacity = \"\";\r\n    bg.style.zIndex = \"\";\r\n    const images = document.querySelectorAll(\".animatedImage\");\r\n    images.forEach((target: any) => {\r\n      target.parentNode.style.transform = \"\";\r\n      target.parentNode.style.opacity = \"\";\r\n      changeImgPath(target, target.dataset.thumbnail);\r\n      if (target.parentNode.style.zIndex) {\r\n        setTimeout(() => {\r\n          if (target.parentNode.style.zIndex) {\r\n            target.parentNode.style.zIndex = \"\";\r\n          }\r\n        }, 500);\r\n      }\r\n    });\r\n    unSetCardAll();\r\n  };\r\n\r\n  const handleOnClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    setIsClicked(true);\r\n    const child = getElementOffset(e.currentTarget);\r\n    const parent = getElementOffset(\r\n      document.querySelector(\"#container-wrapcards\") as HTMLElement\r\n    );\r\n    const px = parent.left + parent.width / 2;\r\n    const py = parent.top + parent.height / 2;\r\n    const cx = parent.left + child.left + child.width / 2;\r\n    const cy = parent.top + child.top + child.height / 2;\r\n\r\n    e.currentTarget.style.transform = `translateX(${px - cx}px) translateY(${\r\n      py - cy\r\n    }px) scale(2)`;\r\n    e.currentTarget.style.zIndex = \"2\";\r\n    const bg = document.querySelector(\"#blurbg-sim\") as HTMLDivElement;\r\n    bg.style.opacity = \"1\";\r\n    bg.style.zIndex = \"1\";\r\n  };\r\n\r\n  const eventHandler = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index?: number\r\n  ) => {\r\n    const targetClass = (e.currentTarget as HTMLElement).classList;\r\n    if (targetClass.contains(\"hover\")) {\r\n      console.log(\"????\");\r\n      handleOnClick(e);\r\n    } else if (index !== undefined) {\r\n      handleOnMouseOver(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full relative flex flex-row justify-center\">\r\n      <div\r\n        id=\"container-wrapcards\"\r\n        ref={targetRef}\r\n        className=\"relative w-full max-w-[700px] py-[5rem] lg:py-[10rem] px-12 sm:px-20 grid gap-4 md:gap-6 grid-cols-2 content-center\"\r\n      >\r\n        {imageSrcs.map((src: string[], index: number) => {\r\n          return (\r\n            <WrapCard\r\n              className={`sim rounded-lg sm:rounded-xl${\r\n                card === index ? \" hover\" : \"\"\r\n              }`}\r\n              key={`${src}-${index}`}\r\n              onClick={(e) => eventHandler(e)}\r\n              onMouseLeave={handleOnMouseLeave}\r\n              onMouseOver={(e) => eventHandler(e, index)}\r\n            >\r\n              {/* Img 태그가 하나 더 존재하는 이유는 opacity를 통한 페이드 인 효과를 위함 */}\r\n              <Img\r\n                className=\"thumbnail\"\r\n                src={src[0]}\r\n                alt={`simulationImage_${index + 1}`}\r\n              />\r\n              <Img\r\n                id={`sim-${index}`}\r\n                className=\"animatedImage\"\r\n                src={src[0]}\r\n                data-src={src[1]}\r\n                data-thumbnail={src[0]}\r\n                alt={`simulationImage_${index + 1}`}\r\n              />\r\n            </WrapCard>\r\n          );\r\n        })}\r\n      </div>\r\n      <Background id=\"blurbg-sim\" onClick={handleOnBgClick} />\r\n    </div>\r\n  );\r\n};\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  backdrop-filter: blur(10px);\r\n`;\r\nconst Img = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: 300ms;\r\n  &.animatedImage {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst WrapCard = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  aspect-ratio: 16/10;\r\n  overflow: hidden;\r\n  box-shadow: #00000069 0 5px 15px -5px;\r\n  transition: all 0.5s;\r\n  cursor: pointer;\r\n  &.hover > .animatedImage {\r\n    opacity: 1;\r\n  }\r\n  &.hover > .thumbnail {\r\n    opacity: 0;\r\n  }\r\n\r\n  &:nth-child(even).hover {\r\n    transform: scale(1.12) translateY(-15%) translateX(12%);\r\n    box-shadow: #00000050 -10px 10px 30px -10px;\r\n  }\r\n  &:nth-child(odd).hover {\r\n    transform: scale(1.12) translateY(-15%) translateX(-12%);\r\n    box-shadow: #00000050 10px 10px 30px -10px;\r\n  }\r\n`;\r\n\r\nexport default Simulation;\r\n"],"names":["props","info","_jsxs","className","children","_jsx","ProjectIntro","detail","src","alt","width","height","simImageSrc","Simulation","data","UsedTech","tech","WhatIDid","whatIDid","threshold","target","useRef","isIntersecting","setIsIntersecting","useState","useEffect","current","observer","IntersectionObserver","entries","forEach","entry","observe","console","log","disconnect","simTimer","Background","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","WrapCard","_templateObject3","imageSrcs","card","setCard","isClicked","setIsClicked","targetRef","useObserver","loadAllImages","setCurrentCard","imageList","Image","index","document","querySelector","concat","handleOnBgClick","changeImgPath","dataset","unSetCardAll","querySelectorAll","thumbnail","newSrc","getElementOffset","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","handleOnMouseLeave","e","bg","style","opacity","zIndex","parentNode","transform","setTimeout","eventHandler","currentTarget","classList","contains","child","parent","px","py","cx","cy","handleOnClick","undefined","handleOnMouseOver","id","ref","map","onClick","onMouseLeave","onMouseOver"],"sourceRoot":""}