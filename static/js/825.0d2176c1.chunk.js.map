{"version":3,"file":"static/js/825.0d2176c1.chunk.js","mappings":"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","sources":["assets/sources/Project4.tsx","components/useObserver.tsx","pages/DetailPage/components/Simulation.tsx"],"sourcesContent":["import WhatIDid from \"pages/DetailPage/components/WhatIDid\";\r\nimport UsedTech from \"pages/DetailPage/components/UsedTech\";\r\nimport { ContentType } from \"types/common\";\r\nimport { ProjectIntro } from \"pages/DetailPage/components/ProjectIntro\";\r\nimport Simulation from \"pages/DetailPage/components/Simulation\";\r\n\r\nconst Project = (props: { info: ContentType }) => {\r\n  const info = props.info;\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center\">\r\n      <ProjectIntro info={info.detail} />\r\n      <section className=\"w-full flex flex-col items-center border-y border-[#d2d2d2]\">\r\n        <img\r\n          src=\"/images/portfolio.webp\"\r\n          alt=\"\"\r\n          width=\"1300\"\r\n          height=\"1000\"\r\n          className=\"w-[1000px] h-auto\"\r\n        />\r\n      </section>\r\n      <section className=\"w-full\">\r\n        {info.detail.simImageSrc && (\r\n          <Simulation data={info.detail.simImageSrc} />\r\n        )}\r\n      </section>\r\n      <section className=\"w-full bg-[var(--secondary-bgColor)]\">\r\n        <UsedTech tech={info.detail.tech} />\r\n        <WhatIDid info={info.detail.whatIDid} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst useObserver = (threshold: number) => {\r\n  const target = useRef<HTMLDivElement>(null);\r\n  const [isIntersecting, setIsIntersecting] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (target.current) {\r\n      const observer = new IntersectionObserver(\r\n        (entries: IntersectionObserverEntry[]) => {\r\n          entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (entry.isIntersecting) setIsIntersecting(true);\r\n            else setIsIntersecting(false);\r\n          });\r\n        },\r\n        {\r\n          threshold: threshold,\r\n        }\r\n      );\r\n      observer.observe(target.current as Element);\r\n      return () => {\r\n        if (observer) {\r\n          console.log(\"observer 종료\");\r\n          observer && observer.disconnect(); // unmounted 시 IntersectionObserver 종료\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return { target, isIntersecting };\r\n};\r\n\r\nexport default useObserver;\r\n","import styled from \"styled-components\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport useObserver from \"components/useObserver\";\r\n\r\nlet simTimer: NodeJS.Timeout;\r\n\r\nconst Simulation = (props: { data: string[][] }) => {\r\n  const imageSrcs: string[][] = props.data;\r\n  const timerRef = useRef<NodeJS.Timer>();\r\n  const cardRef = useRef<{\r\n    currentIndex: number;\r\n    hoverIndex: number;\r\n    clickIndex: number;\r\n  }>({\r\n    currentIndex: -1,\r\n    hoverIndex: -1,\r\n    clickIndex: -1,\r\n  });\r\n  const [card, setCard] = useState<number>(-1); // -1: standBy, 0~N: 호버링 인덱스 번호\r\n  const { target: targetRef, isIntersecting } = useObserver(0.7); // 시뮬레이션 컴포넌트가 뷰포트에 교차되는 경우 작동\r\n\r\n  useEffect(() => {\r\n    loadAllImages(imageSrcs);\r\n    return () => simTimer && clearTimeout(simTimer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      if (!timerRef.current) {\r\n        setCurrentCard(0);\r\n        timerRef.current = setInterval(() => {\r\n          const index = cardRef.current.currentIndex;\r\n          const next = index + 1 >= imageSrcs.length ? 0 : index + 1;\r\n          setCurrentCard(next);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      setCurrentCard(-1);\r\n      handleOnBgClick();\r\n      timerRef.current && clearInterval(timerRef.current);\r\n      timerRef.current = undefined;\r\n    }\r\n  }, [isIntersecting]);\r\n\r\n  const loadAllImages = (imageList: string[][]) => {\r\n    imageList.forEach((src: string[]) => {\r\n      const loadGif = new Image();\r\n      loadGif.src = src[1];\r\n    });\r\n  };\r\n\r\n  const setCurrentCard = (index: number) => {\r\n    if (cardRef.current.hoverIndex > -1 || cardRef.current.clickIndex > -1)\r\n      return;\r\n    const target = document.querySelector(`#sim-${index}`) as HTMLImageElement;\r\n    if (target) {\r\n      cardRef.current.currentIndex = index;\r\n      handleOnBgClick();\r\n      changeImgPath(target, target.dataset.src);\r\n      setCard(index);\r\n    } else setCard(index);\r\n  };\r\n\r\n  const unSetCardAll = () => {\r\n    const targets: NodeListOf<HTMLImageElement> =\r\n      document.querySelectorAll(`.sim`);\r\n    targets.forEach((target: HTMLImageElement) => {\r\n      changeImgPath(target, target.dataset.thumbnail);\r\n    });\r\n    setCard(-1);\r\n    cardRef.current.hoverIndex = -1;\r\n    // cardRef.current.clickIndex = -1;\r\n  };\r\n\r\n  const changeImgPath = (\r\n    target: HTMLImageElement,\r\n    newSrc: string | undefined\r\n  ) => {\r\n    if (newSrc) target.src = newSrc;\r\n  };\r\n\r\n  const getElementOffset = (target: HTMLElement) => {\r\n    const top = target.offsetTop;\r\n    const left = target.offsetLeft;\r\n    const height = target.offsetHeight;\r\n    const width = target.offsetWidth;\r\n    return { top, left, height, width };\r\n  };\r\n\r\n  const handleOnMouseOver = (index: number) => {\r\n    if (cardRef.current.clickIndex > -1) return;\r\n    setCurrentCard(index);\r\n    cardRef.current.hoverIndex = index;\r\n  };\r\n\r\n  const handleOnMouseLeave = (\r\n    e: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n  ) => {\r\n    if (cardRef.current.clickIndex > -1) return;\r\n    unSetCardAll();\r\n  };\r\n\r\n  const handleOnBgClick = () => {\r\n    const images = document.querySelectorAll(\".animatedImage\");\r\n    images.forEach((target: any) => {\r\n      target.parentNode.style.transform = \"\";\r\n      target.parentNode.style.opacity = \"\";\r\n      changeImgPath(target, target.dataset.thumbnail);\r\n      if (target.parentNode.dataset.isActive === \"true\") {\r\n        setTimeout(() => {\r\n          target.parentNode.dataset.isActive = \"false\";\r\n        }, 500);\r\n      }\r\n    });\r\n    cardRef.current.clickIndex = -1;\r\n    const bg = document.querySelector(\"#blurbg-sim\") as HTMLDivElement;\r\n    bg.style.opacity = \"\";\r\n    bg.style.zIndex = \"\";\r\n    unSetCardAll();\r\n  };\r\n\r\n  const handleOnClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number\r\n  ) => {\r\n    cardRef.current.clickIndex = index;\r\n    const child = getElementOffset(e.currentTarget);\r\n    const parent = getElementOffset(\r\n      document.querySelector(\"#container-wrapcards\") as HTMLElement\r\n    );\r\n    const px = parent.left + parent.width / 2;\r\n    const py = parent.top + parent.height / 2;\r\n    const cx = parent.left + child.left + child.width / 2;\r\n    const cy = parent.top + child.top + child.height / 2;\r\n    const target = e.currentTarget;\r\n    target.dataset.isActive = \"true\";\r\n    target.style.transform = `translateX(${px - cx}px) translateY(${\r\n      py - cy\r\n    }px) scale(2)`;\r\n    const bg = document.querySelector(\"#blurbg-sim\") as HTMLDivElement;\r\n    bg.style.opacity = \"1\";\r\n    bg.style.zIndex = \"1\";\r\n  };\r\n\r\n  const eventHandler = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number\r\n  ) => {\r\n    if (cardRef.current.hoverIndex === index) {\r\n      handleOnClick(e, index);\r\n    } else {\r\n      handleOnMouseOver(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full relative flex flex-row justify-center\">\r\n      <div\r\n        id=\"container-wrapcards\"\r\n        ref={targetRef}\r\n        className=\"relative w-full max-w-[700px] py-[5rem] lg:py-[10rem] px-12 sm:px-20 grid gap-4 md:gap-6 grid-cols-2 content-center\"\r\n      >\r\n        {imageSrcs.map((src: string[], index: number) => {\r\n          return (\r\n            <WrapCard\r\n              className={`sim rounded-lg sm:rounded-xl${\r\n                card === index ? \" hover\" : \"\"\r\n              }`}\r\n              key={`${src}-${index}`}\r\n              onClick={(e) => eventHandler(e, index)}\r\n              onMouseLeave={handleOnMouseLeave}\r\n              onMouseOver={(e) => eventHandler(e, index)}\r\n            >\r\n              {/* Img 태그가 하나 더 존재하는 이유는 opacity를 통한 페이드 인 효과를 위함 */}\r\n              <Img\r\n                id={`sim-${index}`}\r\n                className=\"animatedImage\"\r\n                src={src[0]}\r\n                data-src={src[1]}\r\n                data-thumbnail={src[0]}\r\n                alt={`simulationImage_${index + 1}`}\r\n              />\r\n              <Img\r\n                className=\"thumbnail\"\r\n                src={src[0]}\r\n                alt={`simulationImage_${index + 1}`}\r\n              />\r\n            </WrapCard>\r\n          );\r\n        })}\r\n      </div>\r\n      <Background id=\"blurbg-sim\" onClick={handleOnBgClick} />\r\n    </div>\r\n  );\r\n};\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  backdrop-filter: blur(10px);\r\n  transition: all 0.1s;\r\n`;\r\nconst Img = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: opacity 300ms;\r\n`;\r\n\r\nconst WrapCard = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  aspect-ratio: 16/10;\r\n  overflow: hidden;\r\n  box-shadow: #00000069 0 5px 15px -5px;\r\n  transition: all 0.5s;\r\n  cursor: pointer;\r\n\r\n  &[data-is-active=\"true\"] {\r\n    z-index: 2;\r\n  }\r\n  &[data-is-active=\"false\"] {\r\n    z-index: 0;\r\n  }\r\n  &.hover > .thumbnail {\r\n    opacity: 0;\r\n  }\r\n  &:nth-child(even).hover {\r\n    transform: scale(1.12) translateY(-15%) translateX(12%);\r\n    box-shadow: #00000050 -10px 10px 30px -10px;\r\n  }\r\n  &:nth-child(odd).hover {\r\n    transform: scale(1.12) translateY(-15%) translateX(-12%);\r\n    box-shadow: #00000050 10px 10px 30px -10px;\r\n  }\r\n`;\r\n\r\nexport default Simulation;\r\n"],"names":["props","info","_jsxs","className","children","_jsx","ProjectIntro","detail","src","alt","width","height","simImageSrc","Simulation","data","UsedTech","tech","WhatIDid","whatIDid","threshold","target","useRef","isIntersecting","setIsIntersecting","useState","useEffect","current","observer","IntersectionObserver","entries","forEach","entry","observe","console","log","disconnect","simTimer","Background","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","WrapCard","_templateObject3","imageSrcs","timerRef","cardRef","currentIndex","hoverIndex","clickIndex","card","setCard","targetRef","useObserver","loadAllImages","setCurrentCard","setInterval","index","next","length","handleOnBgClick","clearInterval","undefined","imageList","Image","document","querySelector","concat","changeImgPath","dataset","unSetCardAll","querySelectorAll","thumbnail","newSrc","getElementOffset","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","handleOnMouseLeave","e","parentNode","style","transform","opacity","isActive","setTimeout","bg","zIndex","eventHandler","handleOnClick","child","currentTarget","parent","px","py","cx","cy","handleOnMouseOver","id","ref","map","onClick","onMouseLeave","onMouseOver"],"sourceRoot":""}